# language: emacs-lisp
# sudo: false
# # Allow Emacs snapshot builds to fail and don’t wait for these as they can take
# # a looooong time
# matrix:
#   fast_finish: true
#   allow_failures:
#     - env: EMACS_VERSION=snapshot
# env:
#   - EMACS_VERSION=24.3
#   - EMACS_VERSION=24.5
#   - EMACS_VERSION=25.1-rc2
#   - EMACS_VERSION=snapshot
# before_install:
#   # Configure $PATH: Executables are installed to $HOME/bin
#   - export PATH="$HOME/bin:$PATH"
#   # Download the makefile to emacs-travis.mk
#   - wget 'https://raw.githubusercontent.com/flycheck/emacs-travis/master/emacs-travis.mk'
#   # Install Emacs (according to $EMACS_VERSION) and Cask
#   - make -f emacs-travis.mk install_emacs
#   - make -f emacs-travis.mk install_cask
#   # Install Texinfo, if you need to build info manuals for your project
#   - make -f emacs-travis.mk install_texinfo
# install:
#   # Install your dependencies
#   - cask install
# script:
#   # Run your tests
#   - cask exec ert-runner

# script:
#     - make
#     - chktex -W # Print version information.
#     - chktex -q -n 6 *.tex chapters.*.tex 2>/dev/null | tee lint.out
#     # If lint output is non-empty report an error.
#     - test ! -s lint.out

language: node_js
node_js: stable

# addons:
#   apt:
#     sources:
#     - ubuntu-toolchain-r-test
# packages:
#   - emacs25

# 配置环境
# before_install:
#   # 替换为刚才生成的解密信息
#   - openssl aes-256-cbc -K $encrypted_9aea50574292_key -iv $encrypted_9aea50574292_iv -in .travis/travis.enc -out ~/.ssh/id_rsa -d
#   # 改变文件权限
#   - chmod 600 ~/.ssh/id_rsa
#   # 配置 ssh
#   - eval $(ssh-agent)
#   - ssh-add ~/.ssh/id_rsa
#   - cp .travis/ssh_config ~/.ssh/config
#   # 配置 git 替换为自己的信息
#   - git config --global user.name 'jimmy.m.gong'
#   - git config --global user.email jimmy.m.gong@gmail.com

# 配置环境
before_install:
  - sudo apt-get install texlive-latex-recommended texlive-latex-extra texlive-fonts-recommended
  - sudo apt-get install chktex
  - which emacs
  - ls -al /etc/emacs/site-start.d
  - ls -al /etc/emacs/

# 安装依赖
install:
  - npm install hexo-cli -g
  # - npm install https://github.com/CodeFalling/hexo-renderer-org#emacs --save
  - npm install
  - ls -al ./node_modules/
  - nl ./node_modules/hexo-renderer-org/.travis.yml
  # - git clone https://github.com/yssource/hexo-theme-next.git themes/next

# 部署的命令
script:
  # - npm run deploy  # hexo clean && hexo g -d
  - hexo clean && hexo g -d
  # - hexo g
  # - hexo generate && rsync -az -vv --delete -e 'ssh -p 1224' public/ jimmy@google.com:/home/jimmy/org/blog

# addons:
#   ssh_known_hosts: uedsky.com:1224

after_script:
  - cd ./public
  - git init
  # 配置 git 替换为自己的信息
  - git config user.name 'JimmyG'
  - git config user.email jimmy.m.gong@gmail.com
  - git add -A .
  - git commit -m "Update docs"
  - git push --force --quiet "https://${GH_TOKEN}@${GH_REF}" master:master
# E: Build LifeCycle

branches:
  only:
    - blog-source
cache:
  directories:
    - node_modules
env:
 global:
  - GH_REF: github.com/yssource/yssource.github.io.git
  - EMACS: emacs25
